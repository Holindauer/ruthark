# This command assumes the following about your workflow:
# Your workspace is checked into git, commited, and up-to-date with the remote version of your branch. I.e. you have committed and pushed everything.
# Your have already ran `make all`, so the generated code is also up to date with the current upstream version of the current branch.
# You now want the current upstream version of gpu-accelerator to also be up to date with the current ruthark, _for this given branch_.
# This script will create a branch of the same name, add and commit everything in gpu-accelerator with a message referring to the currently latest commit in this branch on ruthark, and force-push it to the gpu-accelerator repo.

# This will break someone elses workflow if they are using a (by now) old version of a given branch, and depend on the code generated by that old version, but update their dependency.
# This should never happen, unless you already are working on the same branch without coordinating that.

# This is very much WIP, use with care!

branch=`git rev-parse --abbrev-ref HEAD`
hash=`git rev-parse HEAD`
cd gpu-accelerator
git switch -c $branch
git add .
message=`echo "This script-generated commit is assumed to be up to date the repo ruthark, branch $branch, commit $hash"`
git commit -nv -m "$message"
git push --force-with-lease --set-upstream origin $branch
